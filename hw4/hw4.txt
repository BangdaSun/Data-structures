For the programming portion of the assignment, please submit only your .java files and your README.txt.  Your code should be well commented.  In addition please include a detailed README.txt file which indicates exactly what files you are submitting, what problem they solve, and how to compile and run them.

(35 points) Based on Weiss Exercise 5.21 - implement this problem as described with the exception of the secondary dictionary.  Your program, called SpellChecker.java should take two command line arguments, the dictionary (provided here as words.txtPreview the documentView in a new window), and the text that you wish to spellcheck. Provide some sample text.  Your program should be case insensitive (so you can toLower everything).  Numbers and contractions are considered valid words.  You may use the java HashTable, HashMap, or HashSet to implement this program; but it must use some kind of hash table.
(35 points) The program should take as a command line argument the name of a file which contains some text. It should then compute the frequencies of the characters in that text and internally build the Huffman tree.  You should then print out in the console window a table of characters along with the corresponding Huffman codes.
The program should then prompt the user to enter a code of 0's and ones. When you press enter the program should decode your input based on the Huffman tree that you constructed from the original input file. If there is an error in the code, print error, rather than the decoded message.

Finally, the program should prompt the user for a series of characters. When the user presses enter, those characters should be converted into the corresponding Huffman code based on the Huffman tree built from the original file input.
